version: "3.8"
services:
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app1
      - app2

  db:
    image: postgres
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: tingeso1
    ports:
      - "5434:5432"

  app1:
    container_name: tingeso-entrega1-1
    image: donuldaricio/tingeso-entrega1
    ports:
      - "8094:8091"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/tingeso1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - db
  app2:
    container_name: tingeso-entrega1-2
    image: donuldaricio/tingeso-entrega1
    ports:
      - "8093:8091"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/tingeso1
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - db
  openvas:
    image: immauss/openvas
    container_name: openvas_jenkins
    ports:
      - "8090:9392"  # Mapea el puerto 9392 en el contenedor al puerto 8090 en la máquina host
    environment:
      - PASSWORD=admin_openvas  # Establece la contraseña
    volumes:
      - openvas_data:/data  # Volumen persistente para los datos de OpenVAS
    restart: always  # Asegura que el contenedor se reinicie si se detiene
    networks:
      - default

volumes:
  openvas_data:  # Volumen persistente que se mantiene entre reinicios del contenedor

